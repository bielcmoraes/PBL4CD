// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/13/2022 13:46:34"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ControlaFluxo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ControlaFluxo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg Full;
reg SE;
reg SI;
reg Senha;
reg Time;
reg reset;
// wires                                               
wire Bloqueado;
wire Liberado;
wire Pare;

// assign statements (if any)                          
ControlaFluxo i1 (
// port map - connection between master ports and signals/registers   
	.Bloqueado(Bloqueado),
	.CLK(CLK),
	.Full(Full),
	.Liberado(Liberado),
	.Pare(Pare),
	.SE(SE),
	.SI(SI),
	.Senha(Senha),
	.\Time (Time),
	.reset(reset)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
initial
begin
	CLK = 1'b0;
end 

// Full
initial
begin
	Full = 1'b0;
end 

// SE
initial
begin
	SE = 1'b0;
end 

// SI
initial
begin
	SI = 1'b0;
end 

// Senha
initial
begin
	Senha = 1'b0;
end 

// Time
initial
begin
	Time = 1'b0;
end 

// reset
initial
begin
	reset = 1'b0;
end 
endmodule

